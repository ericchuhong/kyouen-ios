fastlane_version '2.61.0'

default_platform :ios

SCHEME_NAME_ADHOC = 'TumeKyouen_adhoc'
SCHEME_NAME_STORE = 'TumeKyouen_release'
PLIST_FILE_PATH = 'TumeKyouen/TumeKyouen-Info.plist'

TEAM_ID = '56W5SXE4HE'
BUNDLE_ID = 'hm.orz.chaos114.TumeKyouen'
PROVISIONING_PROFILE_NAME_DEV = 'TumeKyouenAdHoc'
PROVISIONING_PROFILE_NAME_RELEASE = 'TumeKyouenDistribution'

# And you need to set environment variables.
# KEY_PASSWORD : p12 password, using when import *.p12 files.

platform :ios do
  before_all do
    setup_circle_ci
  end

  lane :build_for_appium do
    xcodebuild(
      scheme: SCHEME_NAME_ADHOC,
      build: true,
      sdk: 'iphonesimulator',
      derivedDataPath: 'build'
    )
  end

  desc 'Run unit testing'
  lane :test do
    setup_provisioning_profiles

    run_tests(
      scheme: SCHEME_NAME_ADHOC
    )
  end

  desc 'Submit a new Beta Build to DeployGate'
  lane :beta do
    setup_provisioning_profiles

    build_app(
      scheme: SCHEME_NAME_ADHOC,
      export_method: 'ad-hoc',
      export_options: {
        provisioningProfiles: {
          BUNDLE_ID => PROVISIONING_PROFILE_NAME_DEV
        }
      },
      xcargs: "DEVELOPMENT_TEAM='#{TEAM_ID}' PROVISIONING_PROFILE_SPECIFIER='#{PROVISIONING_PROFILE_NAME_DEV}'"
    )

    message = "Commit: #{ENV['CIRCLE_SHA1']} / #{last_git_commit[:message]}, Build: #{ENV['CIRCLE_BUILD_NUM']}"
    deploygate(
      message: message
    )
  end

  # TODO not tested
  desc 'Submit a new Release Build to TestFlight'
  lane :release do
    setup_provisioning_profiles

    set_info_plist_value(
      path: PLIST_FILE_PATH,
      key: 'CFBundleVersion',
      value: ENV['CIRCLE_BUILD_NUM']
    )

    set_info_plist_value(
      path: PLIST_FILE_PATH,
      key: 'CFBundleShortVersionString',
      value: ENV['CIRCLE_TAG'].sub('v', '')
    )

    build_app(
      scheme: SCHEME_NAME_STORE,
      export_method: 'app-store',
      export_options: {
        provisioningProfiles: {
          BUNDLE_ID => PROVISIONING_PROFILE_NAME_RELEASE
        }
      },
      xcargs: "DEVELOPMENT_TEAM='#{TEAM_ID}' PROVISIONING_PROFILE_SPECIFIER='#{PROVISIONING_PROFILE_NAME_RELEASE}'"
    )

    pilot(
      skip_submission: true,
      skip_waiting_for_build_processing: true
    )

    version = get_info_plist_value(path: plist_file_path, key: 'CFBundleShortVersionString')
    set_github_release(
      repository_name: "#{ENV['CIRCLE_PROJECT_USERNAME']}/#{ENV['CIRCLE_PROJECT_REPONAME']}",
      api_token: ENV['GITHUB_ACCESS_TOKEN'],
      name: "Build: #{ENV['CIRCLE_BUILD_NUM']}",
      commitish: ENV['CIRCLE_SHA1'],
      description: '',
      tag_name: "v#{version}",
      is_prerelease: false,
      upload_assets: [lane_context[SharedValues::IPA_OUTPUT_PATH], lane_context[SharedValues::DSYM_OUTPUT_PATH]]
    )
  end

  private_lane :setup_provisioning_profiles do |options|
    next unless Helper.ci?

    `curl -OL https://developer.apple.com/certificationauthority/AppleWWDRCA.cer`
    import_certificate(
      keychain_name: 'fastlane_tmp_keychain',
      certificate_path: 'certificates/dist.p12',
      certificate_password: ENV['IOS_CERTIFICATES_KEY_PASSWORD'],
      keychain_password: ENV['MATCH_KEYCHAIN_PASSWORD'])
    import_certificate(
      keychain_name: 'fastlane_tmp_keychain',
      certificate_path: 'fastlane/AppleWWDRCA.cer',
      keychain_password: ENV['MATCH_KEYCHAIN_PASSWORD'])

    Dir.glob('../certificates/*.mobileprovision').each {|filename|
      puts filename
      FastlaneCore::ProvisioningProfile.install(filename)
    }
  end
end
